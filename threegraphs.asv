% Load the data
data = readtable('Pier_Data_BE.csv', 'VariableNamingRule', 'preserve');
% Remove rows where Wdir.range is 'Offshore' or Wdir.deg is 9999
valid_idx = ~strcmp(data.('Wdir.range'), 'Offshore') & data.('Wdir.deg') ~= 9999;
% Apply data quality control
valid_idx = valid_idx & data.Cdz <= 0.01;
valid_idx = valid_idx & ~isnan(data.Cdz) & ~isnan(data.('Wdir.deg')) & ~isnan(data.('Sdir.measured')) & ~isnan(data.Uz);
% Add the additional quality control criteria
valid_idx = valid_idx & data.r2_uw >= 0.9;
% Remove data from April 2022 to July 2022
date_nums = datenum(data.year, data.month, data.day);
remove_dates = date_nums >= datenum(2022, 4, 1) & date_nums <= datenum(2022, 7, 31);
valid_idx = valid_idx & ~remove_dates;
% Filtered data
filtered_Wdir_measured = -data.('Wdir.deg')(valid_idx);
filtered_Sdir_measured = -data.('Sdir.measured')(valid_idx);
% Adjust wave and current direction data to be centered around 0 and align with the shoreline
valid_wave_direction_idx = valid_idx & ~strcmp(data.waveMeanDirection_awc6, 'NA');
valid_current_direction_idx = valid_idx & ~strcmp(data.currentDirection_awc6, 'NA');
filtered_data_wave = data(valid_wave_direction_idx, :);
filtered_data_current = data(valid_current_direction_idx, :);
filtered_waveMeanDirection_awc6 = str2double(filtered_data_wave.waveMeanDirection_awc6);
filtered_currentDirection_awc6 = str2double(filtered_data_current.currentDirection_awc6);
% Interpolation of wave and current data
time_idx = find(valid_idx);
wave_time_idx = find(valid_wave_direction_idx);
current_time_idx = find(valid_current_direction_idx);
% Interpolate wave directions
adjusted_wave_direction = interp1(wave_time_idx, filtered_waveMeanDirection_awc6, time_idx, 'linear', 'extrap');
% Interpolate current directions
adjusted_current_direction = interp1(current_time_idx, filtered_currentDirection_awc6, time_idx, 'linear', 'extrap');
% Convert directions from "going to" into "coming from"
adjusted_wave_direction(adjusted_wave_direction > 180) = 180 - (360 - adjusted_wave_direction(adjusted_wave_direction > 180));
adjusted_wave_direction(adjusted_wave_direction <= 180) = 180 + adjusted_wave_direction(adjusted_wave_direction <= 180);
adjusted_current_direction(adjusted_current_direction > 180) = 180 - (360 - adjusted_current_direction(adjusted_current_direction > 180));
adjusted_current_direction(adjusted_current_direction <= 180) = 180 + adjusted_current_direction(adjusted_current_direction <= 180);
% Adjust directions to align with the coastline (shoreward)
coastline_direction_deg = 72;
for i = 1:length(adjusted_wave_direction)
    if adjusted_wave_direction(i) >= 0 && adjusted_wave_direction(i) <= 72
        adjusted_wave_direction(i) = adjusted_wave_direction(i) - coastline_direction_deg;
    elseif adjusted_wave_direction(i) > 342 && adjusted_wave_direction(i) <= 360
        adjusted_wave_direction(i) = adjusted_wave_direction(i) + (360 - coastline_direction_deg);
    else
        adjusted_wave_direction(i) = adjusted_wave_direction(i) - coastline_direction_deg;
    end
    % Ensure direction is within 0-360 degrees
    if adjusted_wave_direction(i) < 0
        adjusted_wave_direction(i) = adjusted_wave_direction(i) + 360;
    elseif adjusted_wave_direction(i) >= 360
        adjusted_wave_direction(i) = adjusted_wave_direction(i) - 360;
    end
end
for i = 1:length(adjusted_current_direction)
    if adjusted_current_direction(i) >= 0 && adjusted_current_direction(i) <= 72
        adjusted_current_direction(i) = adjusted_current_direction(i) - coastline_direction_deg;
    elseif adjusted_current_direction(i) > 342 && adjusted_current_direction(i) <= 360
        adjusted_current_direction(i) = adjusted_current_direction(i) + (360 - coastline_direction_deg);
    else
        adjusted_current_direction(i) = adjusted_current_direction(i) - coastline_direction_deg;
    end
    % Ensure direction is within 0-360 degrees
    if adjusted_current_direction(i) < 0
        adjusted_current_direction(i) = adjusted_current_direction(i) + 360;
    elseif adjusted_current_direction(i) >= 360
        adjusted_current_direction(i) = adjusted_current_direction(i) - 360;
    end
end
% Center directions around 0 degrees
adjusted_wave_direction = -(adjusted_wave_direction - 180);
adjusted_current_direction = -(adjusted_current_direction - 180);


% Bin the data
bin_size = 15; % Change this value to adjust bin size
bin_edges = -90:bin_size:90;
bin_centers = bin_edges(1:end-1) + bin_size / 2;
binned_95th_percentile = zeros(size(bin_centers));
binned_5th_percentile = zeros(size(bin_centers));
binned_mean = zeros(size(bin_centers));

for i = 1:length(bin_centers)
    bin_idx = filtered_Wdir_measured >= bin_edges(i) & filtered_Wdir_measured < bin_edges(i+1);
    bin_data = filtered_Sdir_measured(bin_idx);
    
    if ~isempty(bin_data)
        binned_95th_percentile(i) = prctile(bin_data, 90);
        binned_5th_percentile(i) = prctile(bin_data, 10);
        binned_mean(i) = mean(bin_data);
    end
end

% Overall analysis with subplots
figure;

% Line plot of stress direction vs wind direction
subplot(3, 1, 1);
hold on;

% Plot the 90% data range (5th to 95th percentiles)
fill([bin_centers, fliplr(bin_centers)], ...
     [binned_5th_percentile, fliplr(binned_95th_percentile)], ...
     [0.8 0.8 0.8], 'EdgeColor', 'none', 'DisplayName', '90% Data Range');

% Plot the mean line
plot(bin_centers, binned_mean, 'k-o', 'MarkerFaceColor', 'k', 'DisplayName', 'Mean');

% Add grid and labels
title('Stress Direction vs Wind Direction');
xlabel('Wind Direction (degrees)');
ylabel('Stress Direction');
legend show;
grid on;

% Add reference lines and text
y_limits = ylim;
plot([-45 -45], y_limits, '--k', 'LineWidth', 1, 'HandleVisibility', 'off');
plot([45 45], y_limits, '--k', 'LineWidth', 1, 'HandleVisibility', 'off');
plot([0 0], y_limits, '--k', 'LineWidth', 1, 'HandleVisibility', 'off');
text(-67.5, y_limits(1), 'Alongshore', 'HorizontalAlignment', 'center', 'VerticalAlignment', 'bottom', 'FontSize', 12, 'Color', 'k', 'FontName', 'Arial');
text(2, y_limits(1), 'Onshore', 'HorizontalAlignment', 'center', 'VerticalAlignment', 'bottom', 'FontSize', 12, 'Color', 'k', 'FontName', 'Arial');
text(67.5, y_limits(1), 'Alongshore', 'HorizontalAlignment', 'center', 'VerticalAlignment', 'bottom', 'FontSize', 12, 'Color', 'k', 'FontName', 'Arial');
% Add North and South text annotations
x_limits = xlim;
text(x_limits(2), y_limits(1), 'South', 'HorizontalAlignment', 'right', 'VerticalAlignment', 'bottom', 'FontSize', 12, 'FontWeight', 'bold');
text(x_limits(1), y_limits(1), 'North', 'HorizontalAlignment', 'left', 'VerticalAlignment', 'bottom', 'FontSize', 12, 'FontWeight', 'bold');

hold off;

% Histogram of wave direction
subplot(3, 1, 2);
histogram(adjusted_wave_direction, 'BinEdges', -90:5:90, 'Normalization', 'probability');
title('Histogram of Wave Direction');
xlabel('Direction (degrees)');
ylabel('Frequency');

% Histogram of current direction
subplot(3, 1, 3);
histogram(adjusted_current_direction, 'BinEdges', -90:5:90, 'Normalization', 'probability');
title('Histogram of Current Direction');
xlabel('Direction (degrees)');
ylabel('Frequency');
